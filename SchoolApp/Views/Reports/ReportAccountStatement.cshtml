<style>
    /* 🚀 تحسين مظهر الجداول */
    .styled-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 10px;
        border: 2px solid #007bff; /* ✅ إضافة حدود واضحة للجدول */
    }

        .styled-table th, .styled-table td {
            border: 1px solid #007bff; /* ✅ إضافة حدود للخلايا */
            padding: 10px;
            text-align: center;
        }

        .styled-table th {
            background-color: #007bff;
            color: white;
            font-weight: bold;
        }

        .styled-table tr:nth-child(even) {
            background-color: #f2f2f2;
        }

    /* 🚀 تحسين الطباعة */
    @@media print {
        body *

    {
        visibility: hidden;
    }

    .printable, .printable * {
        visibility: visible;
    }

    .printable {
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
    }

    .print-btn {
        display: none;
    }

    }

    /* تقليل حجم المدخلات */
    .custom-input {
        font-size: 0.85rem;
        padding: 0.25rem 0.5rem;
    }

    /* تقليل الهوامش بين الحقول */
    .custom-form-group {
        margin-bottom: 0.5rem;
    }

    /* تقليل الهوامش حول الأزرار */
    .custom-button {
        margin: 0.2rem;
        padding: 0.3rem 0.5rem;
    }


    @@media print {
        body

    {
        font-size: 14px;
        direction: rtl;
        text-align: right;
    }

    }

</style>
<div class="col-12 grid-margin stretch-card">
    <div class="card">
        <div class="d-flex justify-content-between">
            <div class="m-0">
                <h1 class="card-title text-dark font-weight-bold fs-2"> تقرير  حساب طالب </h1>
            </div>

        </div>

        <div class="card-body">
            <form id="Form" class="forms-sample">
                <!-- Static Fields -->


                <div class="row custom-form-group">
                    <div class="col-md-3">
                        <label class="fs-4"> القسم </label>
                        <select id="DepartmentId" asp-items="ViewBag.ListDepartments" class="form-control form-control-sm">
                            <option value="">اختر القسم</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="fs-4"> المرحلة </label>
                        <select id="StageId" asp-items="ViewBag.ListStages" class="form-control form-control-sm">
                            <option value="">اختر المرحلة</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="fs-4"> الصف </label>
                        <select id="ClassTypeId" class="form-control form-control-sm">
                            <option value="">اختر الصف</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="fs-4"> الطلبة </label>
                        <select id="studentId" asp-items=" ViewBag.ListStudents" class="form-control form-control-sm">
                            <option value="">اختر الطالب</option>
                        </select>
                    </div>
                </div>
                <!-- Additional Static Fields e.g., Books Fee, Registration Fee, Uniform Fee -->
                <div class="row custom-form-group">
                    <div class="col-md-6">
                        <label class="fs-4"> من رقم الطالب </label>
                        <input class="form-control form-control-sm " type="number"/>
                    </div> 
                    <div class="col-md-6">
                        <label class="fs-4"> الي رقم الطالب </label>
                        <input class="form-control form-control-sm " type="number" />
                    </div>
                </div>
                <div class="row custom-form-group">
                    <div class="col-md-6">
                        <label class="fs-4">من تاريخ</label>
                        <input id="fromDate" class="form-control form-control-sm" type="date" />
                    </div>
                    <div class="col-md-6">
                        <label class="fs-4">إلى تاريخ</label>
                        <input id="toDate" class="form-control form-control-sm" type="date" />
                    </div>
                </div>
                <div class="form-group">
                    <button type="button" id="btnData" class="btn btn-success btn-sm custom-button">معاينة</button>
                       </div>
            </form>
            <div id="tableContainer">

           </div>
        </div>
    </div>
</div>

@section Scripts {
       
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
      
        <script>
            $(document).ready(function () {
        //             $('#Table').DataTable({
        //     dom: 'Bfrtip', // Adds buttons
        //     language: {
        //         url: "//cdn.datatables.net/plug-ins/1.13.7/i18n/ar.json" // دعم اللغة العربية
        //     },
        //     buttons: [
        //         {
        //             extend: 'print',
        //             text: 'طباعة الجدول',
        //             title: 'تفاصيل الباصات',
        //             customize: function (win) {
        //                 $(win.document.body).css({
        //                     'font-size': '14px',
        //                     'direction': 'rtl', // توجيه النص لليمين
        //                     'text-align': 'right' // تحسين المحاذاة
        //                 });

        //                 // جعل العنوان في منتصف الصفحة
        //                 $(win.document.body).find('h1').css({
        //                     'text-align': 'center', // توسيط العنوان
        //                     'font-size': '20px', // تكبير الخط
        //                     'font-weight': 'bold', // جعله عريضًا
        //                     'margin-bottom': '20px' // إضافة مسافة تحت العنوان
        //                 });
        //             }
        //         }
        //     ]
        // });

     $("#StageId").change(function () {
                var stageId = $(this).val();
                loadClassTypesByStage(stageId);
            }); 
            async function loadClassTypesByStage(stageId) {
                var classTypeDropdown = $("#ClassTypeId");
                classTypeDropdown.empty(); // تفريغ القائمة
                classTypeDropdown.append('<option >اختر الصف </option>'); // إعادة الخيار الافتراضي

                if (stageId == 0) return; // لا تقم بإرسال الطلب إذا لم يكن هناك مرحلة صالحة

                try {
                    const data = await $.ajax({
                        url: '@Url.Action("GetClassTypeNamesByStage", "ClassType")',
                        type: 'GET',
                        data: { stageId: stageId },
                        dataType: 'json'
                    });

                    if (data && data.length > 0) {
                        $.each(data, function (i, item) {
                            classTypeDropdown.append('<option value="' + item.id + '">' + item.name + '</option>');
                        });
                    } else {
                        classTypeDropdown.append('<option value="0">لا توجد بيانات</option>');
                    }
                } catch (error) {
                    Swal.fire("خطأ", "حدث خطأ أثناء جلب البيانات", "error");
                }
            }
            });
        </script>
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                let today = new Date();
                let lastYear = new Date();
                lastYear.setFullYear(today.getFullYear() - 1);

                // تحويل التاريخ إلى تنسيق YYYY-MM-DD
                let todayStr = today.toISOString().split('T')[0];
                let lastYearStr = lastYear.toISOString().split('T')[0];

                // ضبط القيم الافتراضية
                document.getElementById("fromDate").value = lastYearStr;
                document.getElementById("toDate").value = todayStr;
            });
                    

            $("#btnData").click(function () {
                let formData = {
                    DepartmentId: $("#DepartmentId").val(),
                    StageId: $("#StageId").val(),
                    ClassTypeId: $("#ClassTypeId").val(),
                    FromStudentNumber: $("#FromStudentNumber").val(),
                    ToStudentNumber: $("#ToStudentNumber").val(),
                    FromDate: $("#fromDate").val(),
                    ToDate: $("#toDate").val(),
                      studentId: $("#studentId").val()
                };

                // ⏳ Show Loading Indicator
                Swal.fire({
                    title: 'جاري تحميل البيانات...',
                    allowOutsideClick: false,
                    didOpen: () => Swal.showLoading()
                });

                $.ajax({
                    url: "/Reports/GetAccountStatement",
                    type: "POST",
                    data: formData,
                    success: function (response) {
                        Swal.close(); // ✅ Close loading popup
                        updateDataTable(response);
                    },
                    error: function () {
                        Swal.fire("خطأ", "حدث خطأ أثناء جلب البيانات", "error");
                    }
                });
            });

                                                      function updateDataTable(response) {
            console.log("🔍 البيانات المستلمة:", response); // ✅ تحقق من صحة البيانات

            $("#tableContainer").empty(); // 🧹 مسح البيانات السابقة

            // ✅ زر طباعة جميع الجداول
            $("#tableContainer").append(`
                <button onclick="printAllTables()" class="print-btn all-tables-btn">🖨️ طباعة جميع الجداول</button>
            `);

            $.each(response, function (index, student) {
                console.log("🔍 طالب:", student); // ✅ تحقق من بيانات كل طالب

                if (!student || !student.studentId || !student.studentName) {
                    console.warn("🚨 بيانات الطالب غير صحيحة:", student);
                    return; // ❌ تخطي الطالب إذا لم تكن البيانات صحيحة
                }

                // ✅ إنشاء قسم جديد لكل طالب يتضمن اسمه وجدوله وزر الطباعة
                let studentSection = `
                    <div class="student-section" id="student-${student.studentId}">
                        <h5 class="student-header">🔹 كود الطالب: ${student.studentId} - اسم الطالب: ${student.studentName}</h5>
                        <button onclick="printTable('${student.studentId}')" class="print-btn single-table-btn">🖨️ طباعة هذا الجدول</button>
                        <table class="styled-table">
                            <thead>
                                <tr>
                                    <th>الشرح</th>
                                    <th>التاريخ</th>
                                    <th>رقم الإيصال</th>
                                    <th>الرصيد السابق</th>
                                    <th>الرسوم</th>
                                    <th>المبلغ المدفوع</th>
                                    <th>المبلغ المسترد</th>
                                    <th>المبلغ المتبقي</th>
                                </tr>
                            </thead>
                            <tbody>
                `;

                // 🔄 التكرار على تفاصيل الحساب لكل طالب وإضافتها للجدول
                $.each(student.details, function (i, detail) {
                    let formattedDate = detail.accountDate
                        ? new Date(detail.accountDate).toLocaleDateString('ar-EG')
                        : "—";

                    studentSection += `
                        <tr>
                            <td>${detail.acountName || "—"}</td>
                            <td>${formattedDate}</td>
                            <td>${detail.receiptIdOrName || "—"}</td>
                            <td>${detail.lastBalance ? detail.lastBalance.toFixed(2) : "0.00"}</td>
                            <td>${detail.fees ? detail.fees.toFixed(2) : "0.00"}</td>
                            <td>${detail.payment ? detail.payment.toFixed(2) : "0.00"}</td>
                            <td>${detail.amountReturn ? detail.amountReturn.toFixed(2) : "0.00"}</td>
                                   <td>${detail.ramaingPayment? detail.ramaingPayment.toFixed(2) : "0.00"}</td>
                        </tr>
                    `;
                });

                studentSection += `</tbody></table></div>`; // ✅ إنهاء الجدول والقسم
                $("#tableContainer").append(studentSection); // 📌 إضافة البيانات إلى الصفحة
            });
        }

        // ✅ وظيفة الطباعة لكل طالب
        function printTable(studentId) {
            let printContent = document.getElementById(`student-${studentId}`).innerHTML;
            let originalContent = document.body.innerHTML;

            document.body.innerHTML = `<div class="printable">${printContent}</div>`;
            window.print();
            location.reload(); // إعادة تحميل الصفحة بعد الطباعة للحفاظ على المحتوى الأصلي
        }

        // ✅ وظيفة طباعة جميع الجداول دفعة واحدة
        function printAllTables() {
            let printContent = document.getElementById("tableContainer").innerHTML;
            document.body.innerHTML = `<div class="printable">${printContent}</div>`;
            window.print();
            location.reload(); // إعادة تحميل الصفحة بعد الطباعة للحفاظ على المحتوى الأصلي
        }





        </script>

}
